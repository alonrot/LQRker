# @package _global_
RRTPLQRfeatures:
  hyperpars:
    weights_features:
      Nfeat: 50
    sigma_n:
      init: 0.01
  dim_state: 1
  dim_control: 1
  learning:
    epochs: 200
  empirical_weights:
    Q_emp: np.eye(${RRTPLQRfeatures.dim_state})
    R_emp: np.eye(${RRTPLQRfeatures.dim_control})


dataset:
  # Input dimensionality:
  dim: 1
  # xlims: "[-2,1]" # Limits of hypercube
  xlims: "[0,5]" # Limits of hypercube
  # xlims: "[-2,-1]" # Limits of hypercube
  Nevals: 3
  with_noise: False
  generate: # Generate a number of cost functions by randomly sampling the system matrices
    use: False

## Model validation
validation:
  perc_training: 100
  Ncut: None
  Nfuns: 1